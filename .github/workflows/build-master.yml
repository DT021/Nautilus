name: build-master

on:
  push:
    branches: [ master ]

jobs:

  build-test-release:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.401

      - name: Set Version
        run: |
          echo ::set-env name=VERSION::$(cat Source/version.txt)
          echo ::set-env name=BUILD_NUMBER::$(echo $GITHUB_RUN_NUMBER)

      - name: Set Naming
        run: |
          echo ::set-env name=NAUTILUS_VERSION::$(echo $VERSION)
          echo ::set-env name=NAUTILUS_RELEASE_NAME::$(echo Nautilus-$VERSION)

      - name: Check Naming
        run: |
          echo version: $VERSION
          echo tag: $NAUTILUS_VERSION
          echo release: $NAUTILUS_RELEASE_NAME

      - name: Install dependencies
        run: |
          wget http://download.redis.io/redis-stable.tar.gz
          tar xvzf redis-stable.tar.gz
          cd redis-stable
          sudo make
          sudo make install
          cd -
          git clone --recursive https://github.com/RedisTimeSeries/RedisTimeSeries.git
          cd RedisTimeSeries
          sudo make build
          cd -
          redis-server --daemonize yes
          redis-cli MODULE LOAD /home/runner/work/Nautilus/Nautilus/RedisTimeSeries/bin/linux-x64-release/redistimeseries.so

      - name: Test
        run: |
          dotnet restore
          dotnet test Source/Nautilus.TestSuite.UnitTests
          dotnet test Source/Nautilus.TestSuite.IntegrationTests

      - name: Build Release
        run: |
          dotnet publish Source/NautilusData/NautilusData.csproj -c Release -o NautilusData/
          dotnet publish Source/NautilusExecutor/NautilusExecutor.csproj -c Release -o NautilusExec/
          zip -r ${{ env.NAUTILUS_RELEASE_NAME }}.zip NautilusData/
          zip -r ${{ env.NAUTILUS_RELEASE_NAME }}.zip NautilusExec/

      - name: Create Release Asset
        id: create-release-asset
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NAUTILUS_VERSION }}
          release_name: ${{ env.NAUTILUS_RELEASE_NAME }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release-asset.outputs.upload_url }}
          asset_path: ./${{ env.NAUTILUS_RELEASE_NAME }}.zip
          asset_name: ${{ env.NAUTILUS_RELEASE_NAME }}.zip
          asset_content_type: application/zip
