// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nautilus.Common.Messages {

  /// <summary>Holder for reflection information generated from messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXNzYWdlcy5wcm90bxIQaW52YXJpYW5jZV9wcm90byIHCgVFbXB0eSIs",
            "CglIZWFydEJlYXQSDAoEZnJvbRgBIAEoCRIRCgl0aW1lc3RhbXAYAiABKAki",
            "UgoEVGljaxIOCgZzeW1ib2wYASABKAkSDQoFdmVudWUYAiABKAkSCwoDYmlk",
            "GAMgASgBEgsKA2FzaxgEIAEoARIRCgl0aW1lc3RhbXAYBSABKAkiYAoDQmFy",
            "EgwKBG9wZW4YASABKAESDAoEaGlnaBgCIAEoARILCgNsb3cYAyABKAESDQoF",
            "Y2xvc2UYBCABKAESDgoGdm9sdW1lGAUgASgFEhEKCXRpbWVzdGFtcBgGIAEo",
            "CSKEAQoQQmFyU3BlY2lmaWNhdGlvbhIuCglxdW90ZVR5cGUYASABKA4yGy5p",
            "bnZhcmlhbmNlX3Byb3RvLlF1b3RlVHlwZRIwCgpyZXNvbHV0aW9uGAIgASgO",
            "MhwuaW52YXJpYW5jZV9wcm90by5SZXNvbHV0aW9uEg4KBnBlcmlvZBgDIAEo",
            "BSKXAQoHQmFyRGF0YRIOCgZzeW1ib2wYASABKAkSDQoFdmVudWUYAiABKAkS",
            "MwoHYmFyU3BlYxgDIAEoCzIiLmludmFyaWFuY2VfcHJvdG8uQmFyU3BlY2lm",
            "aWNhdGlvbhIiCgNiYXIYBCABKAsyFS5pbnZhcmlhbmNlX3Byb3RvLkJhchIU",
            "Cgxpc0hpc3RvcmljYWwYBSABKAgiMgoRU3Vic2NyaWJlVGlja0RhdGESDgoG",
            "c3ltYm9sGAEgASgJEg0KBXZlbnVlGAIgASgJIiwKGVN1YnNjcmliZVRpY2tE",
            "YXRhUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCI0ChNVbnN1YnNjcmliZVRp",
            "Y2tEYXRhEg4KBnN5bWJvbBgBIAEoCRINCgV2ZW51ZRgCIAEoCSIuChtVbnN1",
            "YnNjcmliZVRpY2tEYXRhUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCJmChBT",
            "dWJzY3JpYmVCYXJEYXRhEg4KBnN5bWJvbBgBIAEoCRINCgV2ZW51ZRgCIAEo",
            "CRIzCgdiYXJTcGVjGAMgASgLMiIuaW52YXJpYW5jZV9wcm90by5CYXJTcGVj",
            "aWZpY2F0aW9uIisKGFN1YnNjcmliZUJhckRhdGFSZXNwb25zZRIPCgdzdWNj",
            "ZXNzGAEgASgIImgKElVuc3Vic2NyaWJlQmFyRGF0YRIOCgZzeW1ib2wYASAB",
            "KAkSDQoFdmVudWUYAiABKAkSMwoHYmFyU3BlYxgDIAEoCzIiLmludmFyaWFu",
            "Y2VfcHJvdG8uQmFyU3BlY2lmaWNhdGlvbiItChpVbnN1YnNjcmliZUJhckRh",
            "dGFSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIKkEKClJlc29sdXRpb24SCAoE",
            "VElDSxAAEgoKBlNFQ09ORBABEgoKBk1JTlVURRACEggKBEhPVVIQAxIHCgNE",
            "QVkQBCowCglRdW90ZVR5cGUSBwoDQklEEAASBwoDQVNLEAESCAoETEFTVBAC",
            "EgcKA01JRBAEMtMBCg1CYXJEYXRhU2VydmVyEl0KCVN1YnNjcmliZRIiLmlu",
            "dmFyaWFuY2VfcHJvdG8uU3Vic2NyaWJlQmFyRGF0YRoqLmludmFyaWFuY2Vf",
            "cHJvdG8uU3Vic2NyaWJlQmFyRGF0YVJlc3BvbnNlIgASYwoLVW5zdWJzY3Jp",
            "YmUSJC5pbnZhcmlhbmNlX3Byb3RvLlVuc3Vic2NyaWJlQmFyRGF0YRosLmlu",
            "dmFyaWFuY2VfcHJvdG8uVW5zdWJzY3JpYmVCYXJEYXRhUmVzcG9uc2UiADLl",
            "AQoNQmFyRGF0YUNsaWVudBJQChJPbkhlYXJ0QmVhdFJlcXVlc3QSGy5pbnZh",
            "cmlhbmNlX3Byb3RvLkhlYXJ0QmVhdBobLmludmFyaWFuY2VfcHJvdG8uSGVh",
            "cnRCZWF0IgASPwoKT25UaWNrRGF0YRIWLmludmFyaWFuY2VfcHJvdG8uVGlj",
            "axoXLmludmFyaWFuY2VfcHJvdG8uRW1wdHkiABJBCglPbkJhckRhdGESGS5p",
            "bnZhcmlhbmNlX3Byb3RvLkJhckRhdGEaFy5pbnZhcmlhbmNlX3Byb3RvLkVt",
            "cHR5IgBCG6oCGE5hdXRpbHVzLkNvbW1vbi5NZXNzYWdlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Nautilus.Common.Messages.Resolution), typeof(global::Nautilus.Common.Messages.QuoteType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.Empty), global::Nautilus.Common.Messages.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.HeartBeat), global::Nautilus.Common.Messages.HeartBeat.Parser, new[]{ "From", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.Tick), global::Nautilus.Common.Messages.Tick.Parser, new[]{ "Symbol", "Venue", "Bid", "Ask", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.Bar), global::Nautilus.Common.Messages.Bar.Parser, new[]{ "Open", "High", "Low", "Close", "Volume", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.BarSpecification), global::Nautilus.Common.Messages.BarSpecification.Parser, new[]{ "QuoteType", "Resolution", "Period" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.BarData), global::Nautilus.Common.Messages.BarData.Parser, new[]{ "Symbol", "Venue", "BarSpec", "Bar", "IsHistorical" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.SubscribeTickData), global::Nautilus.Common.Messages.SubscribeTickData.Parser, new[]{ "Symbol", "Venue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.SubscribeTickDataResponse), global::Nautilus.Common.Messages.SubscribeTickDataResponse.Parser, new[]{ "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.UnsubscribeTickData), global::Nautilus.Common.Messages.UnsubscribeTickData.Parser, new[]{ "Symbol", "Venue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.UnsubscribeTickDataResponse), global::Nautilus.Common.Messages.UnsubscribeTickDataResponse.Parser, new[]{ "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.SubscribeBarData), global::Nautilus.Common.Messages.SubscribeBarData.Parser, new[]{ "Symbol", "Venue", "BarSpec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.SubscribeBarDataResponse), global::Nautilus.Common.Messages.SubscribeBarDataResponse.Parser, new[]{ "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.UnsubscribeBarData), global::Nautilus.Common.Messages.UnsubscribeBarData.Parser, new[]{ "Symbol", "Venue", "BarSpec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nautilus.Common.Messages.UnsubscribeBarDataResponse), global::Nautilus.Common.Messages.UnsubscribeBarDataResponse.Parser, new[]{ "Success" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Resolution {
    [pbr::OriginalName("TICK")] Tick = 0,
    [pbr::OriginalName("SECOND")] Second = 1,
    [pbr::OriginalName("MINUTE")] Minute = 2,
    [pbr::OriginalName("HOUR")] Hour = 3,
    [pbr::OriginalName("DAY")] Day = 4,
  }

  public enum QuoteType {
    [pbr::OriginalName("BID")] Bid = 0,
    [pbr::OriginalName("ASK")] Ask = 1,
    [pbr::OriginalName("LAST")] Last = 2,
    [pbr::OriginalName("MID")] Mid = 4,
  }

  #endregion

  #region Messages
  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class HeartBeat : pb::IMessage<HeartBeat> {
    private static readonly pb::MessageParser<HeartBeat> _parser = new pb::MessageParser<HeartBeat>(() => new HeartBeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeartBeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeat(HeartBeat other) : this() {
      from_ = other.from_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeat Clone() {
      return new HeartBeat(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private string from_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private string timestamp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeartBeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeartBeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (Timestamp.Length != 0) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (From.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(From);
      }
      if (Timestamp.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (Timestamp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeartBeat other) {
      if (other == null) {
        return;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.Timestamp.Length != 0) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            From = input.ReadString();
            break;
          }
          case 18: {
            Timestamp = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Tick : pb::IMessage<Tick> {
    private static readonly pb::MessageParser<Tick> _parser = new pb::MessageParser<Tick>(() => new Tick());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tick> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tick() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tick(Tick other) : this() {
      symbol_ = other.symbol_;
      venue_ = other.venue_;
      bid_ = other.bid_;
      ask_ = other.ask_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tick Clone() {
      return new Tick(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "venue" field.</summary>
    public const int VenueFieldNumber = 2;
    private string venue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Venue {
      get { return venue_; }
      set {
        venue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bid" field.</summary>
    public const int BidFieldNumber = 3;
    private double bid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Bid {
      get { return bid_; }
      set {
        bid_ = value;
      }
    }

    /// <summary>Field number for the "ask" field.</summary>
    public const int AskFieldNumber = 4;
    private double ask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Ask {
      get { return ask_; }
      set {
        ask_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 5;
    private string timestamp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tick);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tick other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Venue != other.Venue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Bid, other.Bid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Ask, other.Ask)) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Venue.Length != 0) hash ^= Venue.GetHashCode();
      if (Bid != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Bid);
      if (Ask != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Ask);
      if (Timestamp.Length != 0) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Venue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Venue);
      }
      if (Bid != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Bid);
      }
      if (Ask != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Ask);
      }
      if (Timestamp.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Venue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Venue);
      }
      if (Bid != 0D) {
        size += 1 + 8;
      }
      if (Ask != 0D) {
        size += 1 + 8;
      }
      if (Timestamp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tick other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Venue.Length != 0) {
        Venue = other.Venue;
      }
      if (other.Bid != 0D) {
        Bid = other.Bid;
      }
      if (other.Ask != 0D) {
        Ask = other.Ask;
      }
      if (other.Timestamp.Length != 0) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Venue = input.ReadString();
            break;
          }
          case 25: {
            Bid = input.ReadDouble();
            break;
          }
          case 33: {
            Ask = input.ReadDouble();
            break;
          }
          case 42: {
            Timestamp = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Bar : pb::IMessage<Bar> {
    private static readonly pb::MessageParser<Bar> _parser = new pb::MessageParser<Bar>(() => new Bar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Bar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bar(Bar other) : this() {
      open_ = other.open_;
      high_ = other.high_;
      low_ = other.low_;
      close_ = other.close_;
      volume_ = other.volume_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bar Clone() {
      return new Bar(this);
    }

    /// <summary>Field number for the "open" field.</summary>
    public const int OpenFieldNumber = 1;
    private double open_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Open {
      get { return open_; }
      set {
        open_ = value;
      }
    }

    /// <summary>Field number for the "high" field.</summary>
    public const int HighFieldNumber = 2;
    private double high_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double High {
      get { return high_; }
      set {
        high_ = value;
      }
    }

    /// <summary>Field number for the "low" field.</summary>
    public const int LowFieldNumber = 3;
    private double low_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Low {
      get { return low_; }
      set {
        low_ = value;
      }
    }

    /// <summary>Field number for the "close" field.</summary>
    public const int CloseFieldNumber = 4;
    private double close_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Close {
      get { return close_; }
      set {
        close_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 5;
    private int volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 6;
    private string timestamp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Bar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Bar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Open, other.Open)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(High, other.High)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Low, other.Low)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Close, other.Close)) return false;
      if (Volume != other.Volume) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Open != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Open);
      if (High != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(High);
      if (Low != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Low);
      if (Close != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Close);
      if (Volume != 0) hash ^= Volume.GetHashCode();
      if (Timestamp.Length != 0) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Open != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Open);
      }
      if (High != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(High);
      }
      if (Low != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Low);
      }
      if (Close != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Close);
      }
      if (Volume != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Volume);
      }
      if (Timestamp.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Open != 0D) {
        size += 1 + 8;
      }
      if (High != 0D) {
        size += 1 + 8;
      }
      if (Low != 0D) {
        size += 1 + 8;
      }
      if (Close != 0D) {
        size += 1 + 8;
      }
      if (Volume != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Volume);
      }
      if (Timestamp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Bar other) {
      if (other == null) {
        return;
      }
      if (other.Open != 0D) {
        Open = other.Open;
      }
      if (other.High != 0D) {
        High = other.High;
      }
      if (other.Low != 0D) {
        Low = other.Low;
      }
      if (other.Close != 0D) {
        Close = other.Close;
      }
      if (other.Volume != 0) {
        Volume = other.Volume;
      }
      if (other.Timestamp.Length != 0) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Open = input.ReadDouble();
            break;
          }
          case 17: {
            High = input.ReadDouble();
            break;
          }
          case 25: {
            Low = input.ReadDouble();
            break;
          }
          case 33: {
            Close = input.ReadDouble();
            break;
          }
          case 40: {
            Volume = input.ReadInt32();
            break;
          }
          case 50: {
            Timestamp = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BarSpecification : pb::IMessage<BarSpecification> {
    private static readonly pb::MessageParser<BarSpecification> _parser = new pb::MessageParser<BarSpecification>(() => new BarSpecification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BarSpecification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BarSpecification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BarSpecification(BarSpecification other) : this() {
      quoteType_ = other.quoteType_;
      resolution_ = other.resolution_;
      period_ = other.period_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BarSpecification Clone() {
      return new BarSpecification(this);
    }

    /// <summary>Field number for the "quoteType" field.</summary>
    public const int QuoteTypeFieldNumber = 1;
    private global::Nautilus.Common.Messages.QuoteType quoteType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nautilus.Common.Messages.QuoteType QuoteType {
      get { return quoteType_; }
      set {
        quoteType_ = value;
      }
    }

    /// <summary>Field number for the "resolution" field.</summary>
    public const int ResolutionFieldNumber = 2;
    private global::Nautilus.Common.Messages.Resolution resolution_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nautilus.Common.Messages.Resolution Resolution {
      get { return resolution_; }
      set {
        resolution_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 3;
    private int period_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BarSpecification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BarSpecification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuoteType != other.QuoteType) return false;
      if (Resolution != other.Resolution) return false;
      if (Period != other.Period) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QuoteType != 0) hash ^= QuoteType.GetHashCode();
      if (Resolution != 0) hash ^= Resolution.GetHashCode();
      if (Period != 0) hash ^= Period.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QuoteType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuoteType);
      }
      if (Resolution != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Resolution);
      }
      if (Period != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Period);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QuoteType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuoteType);
      }
      if (Resolution != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Resolution);
      }
      if (Period != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Period);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BarSpecification other) {
      if (other == null) {
        return;
      }
      if (other.QuoteType != 0) {
        QuoteType = other.QuoteType;
      }
      if (other.Resolution != 0) {
        Resolution = other.Resolution;
      }
      if (other.Period != 0) {
        Period = other.Period;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            quoteType_ = (global::Nautilus.Common.Messages.QuoteType) input.ReadEnum();
            break;
          }
          case 16: {
            resolution_ = (global::Nautilus.Common.Messages.Resolution) input.ReadEnum();
            break;
          }
          case 24: {
            Period = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BarData : pb::IMessage<BarData> {
    private static readonly pb::MessageParser<BarData> _parser = new pb::MessageParser<BarData>(() => new BarData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BarData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BarData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BarData(BarData other) : this() {
      symbol_ = other.symbol_;
      venue_ = other.venue_;
      barSpec_ = other.barSpec_ != null ? other.barSpec_.Clone() : null;
      bar_ = other.bar_ != null ? other.bar_.Clone() : null;
      isHistorical_ = other.isHistorical_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BarData Clone() {
      return new BarData(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "venue" field.</summary>
    public const int VenueFieldNumber = 2;
    private string venue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Venue {
      get { return venue_; }
      set {
        venue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "barSpec" field.</summary>
    public const int BarSpecFieldNumber = 3;
    private global::Nautilus.Common.Messages.BarSpecification barSpec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nautilus.Common.Messages.BarSpecification BarSpec {
      get { return barSpec_; }
      set {
        barSpec_ = value;
      }
    }

    /// <summary>Field number for the "bar" field.</summary>
    public const int BarFieldNumber = 4;
    private global::Nautilus.Common.Messages.Bar bar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nautilus.Common.Messages.Bar Bar {
      get { return bar_; }
      set {
        bar_ = value;
      }
    }

    /// <summary>Field number for the "isHistorical" field.</summary>
    public const int IsHistoricalFieldNumber = 5;
    private bool isHistorical_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsHistorical {
      get { return isHistorical_; }
      set {
        isHistorical_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BarData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BarData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Venue != other.Venue) return false;
      if (!object.Equals(BarSpec, other.BarSpec)) return false;
      if (!object.Equals(Bar, other.Bar)) return false;
      if (IsHistorical != other.IsHistorical) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Venue.Length != 0) hash ^= Venue.GetHashCode();
      if (barSpec_ != null) hash ^= BarSpec.GetHashCode();
      if (bar_ != null) hash ^= Bar.GetHashCode();
      if (IsHistorical != false) hash ^= IsHistorical.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Venue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Venue);
      }
      if (barSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BarSpec);
      }
      if (bar_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Bar);
      }
      if (IsHistorical != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsHistorical);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Venue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Venue);
      }
      if (barSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BarSpec);
      }
      if (bar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bar);
      }
      if (IsHistorical != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BarData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Venue.Length != 0) {
        Venue = other.Venue;
      }
      if (other.barSpec_ != null) {
        if (barSpec_ == null) {
          barSpec_ = new global::Nautilus.Common.Messages.BarSpecification();
        }
        BarSpec.MergeFrom(other.BarSpec);
      }
      if (other.bar_ != null) {
        if (bar_ == null) {
          bar_ = new global::Nautilus.Common.Messages.Bar();
        }
        Bar.MergeFrom(other.Bar);
      }
      if (other.IsHistorical != false) {
        IsHistorical = other.IsHistorical;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Venue = input.ReadString();
            break;
          }
          case 26: {
            if (barSpec_ == null) {
              barSpec_ = new global::Nautilus.Common.Messages.BarSpecification();
            }
            input.ReadMessage(barSpec_);
            break;
          }
          case 34: {
            if (bar_ == null) {
              bar_ = new global::Nautilus.Common.Messages.Bar();
            }
            input.ReadMessage(bar_);
            break;
          }
          case 40: {
            IsHistorical = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeTickData : pb::IMessage<SubscribeTickData> {
    private static readonly pb::MessageParser<SubscribeTickData> _parser = new pb::MessageParser<SubscribeTickData>(() => new SubscribeTickData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeTickData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeTickData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeTickData(SubscribeTickData other) : this() {
      symbol_ = other.symbol_;
      venue_ = other.venue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeTickData Clone() {
      return new SubscribeTickData(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "venue" field.</summary>
    public const int VenueFieldNumber = 2;
    private string venue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Venue {
      get { return venue_; }
      set {
        venue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeTickData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeTickData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Venue != other.Venue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Venue.Length != 0) hash ^= Venue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Venue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Venue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Venue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Venue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeTickData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Venue.Length != 0) {
        Venue = other.Venue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Venue = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeTickDataResponse : pb::IMessage<SubscribeTickDataResponse> {
    private static readonly pb::MessageParser<SubscribeTickDataResponse> _parser = new pb::MessageParser<SubscribeTickDataResponse>(() => new SubscribeTickDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeTickDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeTickDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeTickDataResponse(SubscribeTickDataResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeTickDataResponse Clone() {
      return new SubscribeTickDataResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeTickDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeTickDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeTickDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeTickData : pb::IMessage<UnsubscribeTickData> {
    private static readonly pb::MessageParser<UnsubscribeTickData> _parser = new pb::MessageParser<UnsubscribeTickData>(() => new UnsubscribeTickData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeTickData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeTickData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeTickData(UnsubscribeTickData other) : this() {
      symbol_ = other.symbol_;
      venue_ = other.venue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeTickData Clone() {
      return new UnsubscribeTickData(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "venue" field.</summary>
    public const int VenueFieldNumber = 2;
    private string venue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Venue {
      get { return venue_; }
      set {
        venue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeTickData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeTickData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Venue != other.Venue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Venue.Length != 0) hash ^= Venue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Venue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Venue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Venue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Venue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeTickData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Venue.Length != 0) {
        Venue = other.Venue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Venue = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeTickDataResponse : pb::IMessage<UnsubscribeTickDataResponse> {
    private static readonly pb::MessageParser<UnsubscribeTickDataResponse> _parser = new pb::MessageParser<UnsubscribeTickDataResponse>(() => new UnsubscribeTickDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeTickDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeTickDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeTickDataResponse(UnsubscribeTickDataResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeTickDataResponse Clone() {
      return new UnsubscribeTickDataResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeTickDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeTickDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeTickDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeBarData : pb::IMessage<SubscribeBarData> {
    private static readonly pb::MessageParser<SubscribeBarData> _parser = new pb::MessageParser<SubscribeBarData>(() => new SubscribeBarData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeBarData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeBarData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeBarData(SubscribeBarData other) : this() {
      symbol_ = other.symbol_;
      venue_ = other.venue_;
      barSpec_ = other.barSpec_ != null ? other.barSpec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeBarData Clone() {
      return new SubscribeBarData(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "venue" field.</summary>
    public const int VenueFieldNumber = 2;
    private string venue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Venue {
      get { return venue_; }
      set {
        venue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "barSpec" field.</summary>
    public const int BarSpecFieldNumber = 3;
    private global::Nautilus.Common.Messages.BarSpecification barSpec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nautilus.Common.Messages.BarSpecification BarSpec {
      get { return barSpec_; }
      set {
        barSpec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeBarData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeBarData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Venue != other.Venue) return false;
      if (!object.Equals(BarSpec, other.BarSpec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Venue.Length != 0) hash ^= Venue.GetHashCode();
      if (barSpec_ != null) hash ^= BarSpec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Venue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Venue);
      }
      if (barSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BarSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Venue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Venue);
      }
      if (barSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BarSpec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeBarData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Venue.Length != 0) {
        Venue = other.Venue;
      }
      if (other.barSpec_ != null) {
        if (barSpec_ == null) {
          barSpec_ = new global::Nautilus.Common.Messages.BarSpecification();
        }
        BarSpec.MergeFrom(other.BarSpec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Venue = input.ReadString();
            break;
          }
          case 26: {
            if (barSpec_ == null) {
              barSpec_ = new global::Nautilus.Common.Messages.BarSpecification();
            }
            input.ReadMessage(barSpec_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeBarDataResponse : pb::IMessage<SubscribeBarDataResponse> {
    private static readonly pb::MessageParser<SubscribeBarDataResponse> _parser = new pb::MessageParser<SubscribeBarDataResponse>(() => new SubscribeBarDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeBarDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeBarDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeBarDataResponse(SubscribeBarDataResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeBarDataResponse Clone() {
      return new SubscribeBarDataResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeBarDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeBarDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeBarDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeBarData : pb::IMessage<UnsubscribeBarData> {
    private static readonly pb::MessageParser<UnsubscribeBarData> _parser = new pb::MessageParser<UnsubscribeBarData>(() => new UnsubscribeBarData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeBarData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeBarData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeBarData(UnsubscribeBarData other) : this() {
      symbol_ = other.symbol_;
      venue_ = other.venue_;
      barSpec_ = other.barSpec_ != null ? other.barSpec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeBarData Clone() {
      return new UnsubscribeBarData(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "venue" field.</summary>
    public const int VenueFieldNumber = 2;
    private string venue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Venue {
      get { return venue_; }
      set {
        venue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "barSpec" field.</summary>
    public const int BarSpecFieldNumber = 3;
    private global::Nautilus.Common.Messages.BarSpecification barSpec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nautilus.Common.Messages.BarSpecification BarSpec {
      get { return barSpec_; }
      set {
        barSpec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeBarData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeBarData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Venue != other.Venue) return false;
      if (!object.Equals(BarSpec, other.BarSpec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Venue.Length != 0) hash ^= Venue.GetHashCode();
      if (barSpec_ != null) hash ^= BarSpec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Venue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Venue);
      }
      if (barSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BarSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Venue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Venue);
      }
      if (barSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BarSpec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeBarData other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Venue.Length != 0) {
        Venue = other.Venue;
      }
      if (other.barSpec_ != null) {
        if (barSpec_ == null) {
          barSpec_ = new global::Nautilus.Common.Messages.BarSpecification();
        }
        BarSpec.MergeFrom(other.BarSpec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Venue = input.ReadString();
            break;
          }
          case 26: {
            if (barSpec_ == null) {
              barSpec_ = new global::Nautilus.Common.Messages.BarSpecification();
            }
            input.ReadMessage(barSpec_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeBarDataResponse : pb::IMessage<UnsubscribeBarDataResponse> {
    private static readonly pb::MessageParser<UnsubscribeBarDataResponse> _parser = new pb::MessageParser<UnsubscribeBarDataResponse>(() => new UnsubscribeBarDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeBarDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nautilus.Common.Messages.MessagesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeBarDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeBarDataResponse(UnsubscribeBarDataResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeBarDataResponse Clone() {
      return new UnsubscribeBarDataResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeBarDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeBarDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeBarDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
