// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages.proto
// </auto-generated>
// Original file comments:
// --------------------------------------------------------------------------------------------------
// <copyright file="messages.proto" company="Nautech Systems Pty Ltd">
//  Copyright (C) 2015-2018 Nautech Systems Pty Ltd. All rights reserved.
//  The use of this source code is governed by the license as found in the LICENSE.txt file.
//  http://www.nautechsystems.net
// </copyright>
// --------------------------------------------------------------------------------------------------
//
#pragma warning disable 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Nautilus.Database.Protobuf {
  public static partial class DataServer
  {
    static readonly string __ServiceName = "invariance_proto.DataServer";

    static readonly grpc::Marshaller<global::Nautilus.Database.Protobuf.SubscribeTickData> __Marshaller_SubscribeTickData = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nautilus.Database.Protobuf.SubscribeTickData.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nautilus.Database.Protobuf.SubscribeTickDataResponse> __Marshaller_SubscribeTickDataResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nautilus.Database.Protobuf.SubscribeTickDataResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nautilus.Database.Protobuf.SubscribeBarData> __Marshaller_SubscribeBarData = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nautilus.Database.Protobuf.SubscribeBarData.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nautilus.Database.Protobuf.SubscribeBarDataResponse> __Marshaller_SubscribeBarDataResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nautilus.Database.Protobuf.SubscribeBarDataResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nautilus.Database.Protobuf.UnsubscribeTickData> __Marshaller_UnsubscribeTickData = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nautilus.Database.Protobuf.UnsubscribeTickData.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nautilus.Database.Protobuf.UnsubscribeTickDataResponse> __Marshaller_UnsubscribeTickDataResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nautilus.Database.Protobuf.UnsubscribeTickDataResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nautilus.Database.Protobuf.UnsubscribeBarData> __Marshaller_UnsubscribeBarData = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nautilus.Database.Protobuf.UnsubscribeBarData.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nautilus.Database.Protobuf.UnsubscribeBarDataResponse> __Marshaller_UnsubscribeBarDataResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nautilus.Database.Protobuf.UnsubscribeBarDataResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Nautilus.Database.Protobuf.SubscribeTickData, global::Nautilus.Database.Protobuf.SubscribeTickDataResponse> __Method_OnSubscribeTickData = new grpc::Method<global::Nautilus.Database.Protobuf.SubscribeTickData, global::Nautilus.Database.Protobuf.SubscribeTickDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OnSubscribeTickData",
        __Marshaller_SubscribeTickData,
        __Marshaller_SubscribeTickDataResponse);

    static readonly grpc::Method<global::Nautilus.Database.Protobuf.SubscribeBarData, global::Nautilus.Database.Protobuf.SubscribeBarDataResponse> __Method_OnSubscribeBarData = new grpc::Method<global::Nautilus.Database.Protobuf.SubscribeBarData, global::Nautilus.Database.Protobuf.SubscribeBarDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OnSubscribeBarData",
        __Marshaller_SubscribeBarData,
        __Marshaller_SubscribeBarDataResponse);

    static readonly grpc::Method<global::Nautilus.Database.Protobuf.UnsubscribeTickData, global::Nautilus.Database.Protobuf.UnsubscribeTickDataResponse> __Method_OnUnsubscribeTickData = new grpc::Method<global::Nautilus.Database.Protobuf.UnsubscribeTickData, global::Nautilus.Database.Protobuf.UnsubscribeTickDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OnUnsubscribeTickData",
        __Marshaller_UnsubscribeTickData,
        __Marshaller_UnsubscribeTickDataResponse);

    static readonly grpc::Method<global::Nautilus.Database.Protobuf.UnsubscribeBarData, global::Nautilus.Database.Protobuf.UnsubscribeBarDataResponse> __Method_OnUnsubscribeBarData = new grpc::Method<global::Nautilus.Database.Protobuf.UnsubscribeBarData, global::Nautilus.Database.Protobuf.UnsubscribeBarDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OnUnsubscribeBarData",
        __Marshaller_UnsubscribeBarData,
        __Marshaller_UnsubscribeBarDataResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Nautilus.Database.Protobuf.MessagesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DataServer</summary>
    public abstract partial class DataServerBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Nautilus.Database.Protobuf.SubscribeTickDataResponse> OnSubscribeTickData(global::Nautilus.Database.Protobuf.SubscribeTickData request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nautilus.Database.Protobuf.SubscribeBarDataResponse> OnSubscribeBarData(global::Nautilus.Database.Protobuf.SubscribeBarData request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nautilus.Database.Protobuf.UnsubscribeTickDataResponse> OnUnsubscribeTickData(global::Nautilus.Database.Protobuf.UnsubscribeTickData request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nautilus.Database.Protobuf.UnsubscribeBarDataResponse> OnUnsubscribeBarData(global::Nautilus.Database.Protobuf.UnsubscribeBarData request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DataServer</summary>
    public partial class DataServerClient : grpc::ClientBase<DataServerClient>
    {
      /// <summary>Creates a new client for DataServer</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DataServerClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DataServer that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DataServerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DataServerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DataServerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Nautilus.Database.Protobuf.SubscribeTickDataResponse OnSubscribeTickData(global::Nautilus.Database.Protobuf.SubscribeTickData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnSubscribeTickData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nautilus.Database.Protobuf.SubscribeTickDataResponse OnSubscribeTickData(global::Nautilus.Database.Protobuf.SubscribeTickData request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OnSubscribeTickData, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.SubscribeTickDataResponse> OnSubscribeTickDataAsync(global::Nautilus.Database.Protobuf.SubscribeTickData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnSubscribeTickDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.SubscribeTickDataResponse> OnSubscribeTickDataAsync(global::Nautilus.Database.Protobuf.SubscribeTickData request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OnSubscribeTickData, null, options, request);
      }
      public virtual global::Nautilus.Database.Protobuf.SubscribeBarDataResponse OnSubscribeBarData(global::Nautilus.Database.Protobuf.SubscribeBarData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnSubscribeBarData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nautilus.Database.Protobuf.SubscribeBarDataResponse OnSubscribeBarData(global::Nautilus.Database.Protobuf.SubscribeBarData request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OnSubscribeBarData, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.SubscribeBarDataResponse> OnSubscribeBarDataAsync(global::Nautilus.Database.Protobuf.SubscribeBarData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnSubscribeBarDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.SubscribeBarDataResponse> OnSubscribeBarDataAsync(global::Nautilus.Database.Protobuf.SubscribeBarData request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OnSubscribeBarData, null, options, request);
      }
      public virtual global::Nautilus.Database.Protobuf.UnsubscribeTickDataResponse OnUnsubscribeTickData(global::Nautilus.Database.Protobuf.UnsubscribeTickData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnUnsubscribeTickData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nautilus.Database.Protobuf.UnsubscribeTickDataResponse OnUnsubscribeTickData(global::Nautilus.Database.Protobuf.UnsubscribeTickData request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OnUnsubscribeTickData, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.UnsubscribeTickDataResponse> OnUnsubscribeTickDataAsync(global::Nautilus.Database.Protobuf.UnsubscribeTickData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnUnsubscribeTickDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.UnsubscribeTickDataResponse> OnUnsubscribeTickDataAsync(global::Nautilus.Database.Protobuf.UnsubscribeTickData request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OnUnsubscribeTickData, null, options, request);
      }
      public virtual global::Nautilus.Database.Protobuf.UnsubscribeBarDataResponse OnUnsubscribeBarData(global::Nautilus.Database.Protobuf.UnsubscribeBarData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnUnsubscribeBarData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nautilus.Database.Protobuf.UnsubscribeBarDataResponse OnUnsubscribeBarData(global::Nautilus.Database.Protobuf.UnsubscribeBarData request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OnUnsubscribeBarData, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.UnsubscribeBarDataResponse> OnUnsubscribeBarDataAsync(global::Nautilus.Database.Protobuf.UnsubscribeBarData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnUnsubscribeBarDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.UnsubscribeBarDataResponse> OnUnsubscribeBarDataAsync(global::Nautilus.Database.Protobuf.UnsubscribeBarData request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OnUnsubscribeBarData, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DataServerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DataServerClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DataServerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_OnSubscribeTickData, serviceImpl.OnSubscribeTickData)
          .AddMethod(__Method_OnSubscribeBarData, serviceImpl.OnSubscribeBarData)
          .AddMethod(__Method_OnUnsubscribeTickData, serviceImpl.OnUnsubscribeTickData)
          .AddMethod(__Method_OnUnsubscribeBarData, serviceImpl.OnUnsubscribeBarData).Build();
    }

  }
  public static partial class DataClient
  {
    static readonly string __ServiceName = "invariance_proto.DataClient";

    static readonly grpc::Marshaller<global::Nautilus.Database.Protobuf.HeartBeat> __Marshaller_HeartBeat = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nautilus.Database.Protobuf.HeartBeat.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nautilus.Database.Protobuf.Tick> __Marshaller_Tick = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nautilus.Database.Protobuf.Tick.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nautilus.Database.Protobuf.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nautilus.Database.Protobuf.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nautilus.Database.Protobuf.BarData> __Marshaller_BarData = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nautilus.Database.Protobuf.BarData.Parser.ParseFrom);

    static readonly grpc::Method<global::Nautilus.Database.Protobuf.HeartBeat, global::Nautilus.Database.Protobuf.HeartBeat> __Method_OnHeartBeatRequest = new grpc::Method<global::Nautilus.Database.Protobuf.HeartBeat, global::Nautilus.Database.Protobuf.HeartBeat>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OnHeartBeatRequest",
        __Marshaller_HeartBeat,
        __Marshaller_HeartBeat);

    static readonly grpc::Method<global::Nautilus.Database.Protobuf.Tick, global::Nautilus.Database.Protobuf.Empty> __Method_OnTickData = new grpc::Method<global::Nautilus.Database.Protobuf.Tick, global::Nautilus.Database.Protobuf.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OnTickData",
        __Marshaller_Tick,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Nautilus.Database.Protobuf.BarData, global::Nautilus.Database.Protobuf.Empty> __Method_OnBarData = new grpc::Method<global::Nautilus.Database.Protobuf.BarData, global::Nautilus.Database.Protobuf.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OnBarData",
        __Marshaller_BarData,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Nautilus.Database.Protobuf.MessagesReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of DataClient</summary>
    public abstract partial class DataClientBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Nautilus.Database.Protobuf.HeartBeat> OnHeartBeatRequest(global::Nautilus.Database.Protobuf.HeartBeat request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nautilus.Database.Protobuf.Empty> OnTickData(global::Nautilus.Database.Protobuf.Tick request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Nautilus.Database.Protobuf.Empty> OnBarData(global::Nautilus.Database.Protobuf.BarData request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DataClient</summary>
    public partial class DataClientClient : grpc::ClientBase<DataClientClient>
    {
      /// <summary>Creates a new client for DataClient</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DataClientClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DataClient that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DataClientClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DataClientClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DataClientClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Nautilus.Database.Protobuf.HeartBeat OnHeartBeatRequest(global::Nautilus.Database.Protobuf.HeartBeat request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnHeartBeatRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nautilus.Database.Protobuf.HeartBeat OnHeartBeatRequest(global::Nautilus.Database.Protobuf.HeartBeat request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OnHeartBeatRequest, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.HeartBeat> OnHeartBeatRequestAsync(global::Nautilus.Database.Protobuf.HeartBeat request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnHeartBeatRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.HeartBeat> OnHeartBeatRequestAsync(global::Nautilus.Database.Protobuf.HeartBeat request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OnHeartBeatRequest, null, options, request);
      }
      public virtual global::Nautilus.Database.Protobuf.Empty OnTickData(global::Nautilus.Database.Protobuf.Tick request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnTickData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nautilus.Database.Protobuf.Empty OnTickData(global::Nautilus.Database.Protobuf.Tick request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OnTickData, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.Empty> OnTickDataAsync(global::Nautilus.Database.Protobuf.Tick request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnTickDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.Empty> OnTickDataAsync(global::Nautilus.Database.Protobuf.Tick request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OnTickData, null, options, request);
      }
      public virtual global::Nautilus.Database.Protobuf.Empty OnBarData(global::Nautilus.Database.Protobuf.BarData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnBarData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Nautilus.Database.Protobuf.Empty OnBarData(global::Nautilus.Database.Protobuf.BarData request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OnBarData, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.Empty> OnBarDataAsync(global::Nautilus.Database.Protobuf.BarData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OnBarDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Nautilus.Database.Protobuf.Empty> OnBarDataAsync(global::Nautilus.Database.Protobuf.BarData request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OnBarData, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DataClientClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DataClientClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DataClientBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_OnHeartBeatRequest, serviceImpl.OnHeartBeatRequest)
          .AddMethod(__Method_OnTickData, serviceImpl.OnTickData)
          .AddMethod(__Method_OnBarData, serviceImpl.OnBarData).Build();
    }

  }
}
#endregion
